<configuration scan="true" scanPeriod="3 seconds" debug="false">
  <!--<jmxConfigurator /> -->
  <!-- directory path for all other type logs -->

  <property name="logDir" value="/opt/chameleon/logs" />

  <!--  specify the component name -->
  <property name="componentName" value="AAI-CHAMELEON" />

  <!--  default eelf log file names -->
  <property name="generalLogName" value="error" />
  <property name="metricsLogName" value="metrics" />
  <property name="auditLogName" value="audit" />
  <property name="debugLogName" value="debug" />

  <property name="errorLogPattern" value="%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}|%mdc{RequestId}|%thread|DataRouter|%mdc{PartnerName}|%logger||%.-5level|%msg%n" />

  <property name="auditMetricPattern" value="%msg%n" />

  <property name="logDirectory" value="${logDir}/${componentName}" />

  <!-- ============================================================================ -->
  <!-- EELF Appenders -->
  <!-- ============================================================================ -->

  <!-- The EELFAppender is used to record events to the general application
  log -->

  <appender name="EELF"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logDirectory}/${generalLogName}.log</file>
    <rollingPolicy
      class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${logDirectory}/${generalLogName}.%d{yyyy-MM-dd}.log.zip
      </fileNamePattern>
      <maxHistory>60</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>${errorLogPattern}</pattern>
      <outputPatternAsHeader>true</outputPatternAsHeader>
    </encoder>
  </appender>

  <appender name="asyncEELF" class="ch.qos.logback.classic.AsyncAppender">
    <!-- deny all events with a level below INFO, that is TRACE and DEBUG -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>INFO</level>
    </filter>
    <queueSize>256</queueSize>
    <appender-ref ref="EELF" />
  </appender>


  <!-- EELF Audit Appender. This appender is used to record audit engine
       related logging events. The audit logger and appender are specializations
       of the EELF application root logger and appender. This can be used to segregate
       Policy engine events from other components, or it can be eliminated to record
  these events as part of the application root log. -->

  <appender name="EELFAudit"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${logDirectory}/${auditLogName}.log</file>
    <rollingPolicy
      class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${logDirectory}/${auditLogName}.%d{yyyy-MM-dd}.log.zip
      </fileNamePattern>
      <maxHistory>60</maxHistory>
    </rollingPolicy>
    <encoder>
      <outputPatternAsHeader>true</outputPatternAsHeader>
      <pattern>${auditMetricPattern}</pattern>
    </encoder>
  </appender>

  <appender name="asyncEELFAudit" class="ch.qos.logback.classic.AsyncAppender">
    <queueSize>256</queueSize>
    <appender-ref ref="EELFAudit" />
  </appender>
  <!-- ============================================================================ -->
  <!--  EELF loggers -->
  <!-- ============================================================================ -->

  <!-- CRUD Service loggers -->
  <logger name="chameleon" level="INFO">
    <appender-ref ref="asyncEELF" />
  </logger>

  <logger name="com.att.eelf.audit" level="info" additivity="false">
    <appender-ref ref="asyncEELFAudit" />
  </logger>

  <!-- Other Loggers that may help troubleshoot -->
  <logger name="net.sf" level="WARN" />
  <logger name="org.apache" level="WARN" />
  <logger name="org.apache.commons.httpclient" level="WARN" />
  <logger name="org.apache.commons" level="WARN" />
  <logger name="org.apache.coyote" level="WARN" />
  <logger name="org.apache.jasper" level="WARN" />

  <!-- logback internals logging -->
  <logger name="ch.qos.logback.classic" level="WARN" />
  <logger name="ch.qos.logback.core" level="WARN" />

  <root>
    <!-- <appender-ref ref="asyncEELF" /> -->
    <!-- <appender-ref ref="asyncEELFDebug" /> -->
  </root>

</configuration>
